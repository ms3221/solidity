{
  "contractName": "MyNFTs",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MyNFTs.sol\":\"MyNFTs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/KIP17Full.sol\":{\"keccak256\":\"0x8f8b35613048dee0f7cc5f0ff166a188be908d8dbbd01980985eab2eb6e0265e\",\"urls\":[\"bzz-raw://38d8e8333db75074e2f1a33b8f90cec346f1f71a1480a43ad6a279e44dbdf9b4\",\"dweb:/ipfs/QmRre82EZPfZEDW7aRnbMBvsCf5uDMtEs2ZQxWqQW8PCL6\"]},\"project:/contracts/MyNFTs.sol\":{\"keccak256\":\"0x47f8a0df3b62c938382ada977713cc6ef88a4156b5df52b4e4659b28960ea01c\",\"urls\":[\"bzz-raw://90eb2bf3c411f85719e4bb4b8b44beabafe1cc5e86901e8530fe4d43d88b0660\",\"dweb:/ipfs/QmZtHoERwEjFduWpR5saUGDD1Ju38gCXW3MQGURFGZze2y\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb4651461063d578063b88d4fde1461068d578063c87b56dd14610792578063e985e9c514610839578063f2fde38b146108b5578063fb37e883146108f957610137565b806370a08231146104ec578063715018a6146105445780638da5cb5b1461054e5780638f32d59b1461059857806395d89b41146105ba57610137565b806323b872dd116100ff57806323b872dd146102fe5780632f745c591461036c57806342842e0e146103ce5780634f6ccce71461043c5780636352211e1461047e57610137565b806301ffc9a71461013c57806306fdde03146101a1578063081812fc14610224578063095ea7b31461029257806318160ddd146102e0575b600080fd5b6101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506109c8565b604051808215151515815260200191505060405180910390f35b6101a9610a2f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e95780820151818401526020810190506101ce565b50505050905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102506004803603602081101561023a57600080fd5b8101908080359060200190929190505050610ad1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102de600480360360408110156102a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b6c565b005b6102e8610d62565b6040518082815260200191505060405180910390f35b61036a6004803603606081101561031457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d6f565b005b6103b86004803603604081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dde565b6040518082815260200191505060405180910390f35b61043a600480360360608110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e9d565b005b6104686004803603602081101561045257600080fd5b8101908080359060200190929190505050610ebd565b6040518082815260200191505060405180910390f35b6104aa6004803603602081101561049457600080fd5b8101908080359060200190929190505050610f3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61052e6004803603602081101561050257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611005565b6040518082815260200191505060405180910390f35b61054c6110da565b005b610556611215565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a061123f565b604051808215151515815260200191505060405180910390f35b6105c2611297565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106025780820151818401526020810190506105e7565b50505050905090810190601f16801561062f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61068b6004803603604081101561065357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611339565b005b610790600480360360808110156106a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561070a57600080fd5b82018360208201111561071c57600080fd5b8035906020019184600183028401116401000000008311171561073e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114dc565b005b6107be600480360360208110156107a857600080fd5b810190808035906020019092919050505061154e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107fe5780820151818401526020810190506107e3565b50505050905090810190601f16801561082b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61089b6004803603604081101561084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611661565b604051808215151515815260200191505060405180910390f35b6108f7600480360360208110156108cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116f5565b005b6109b26004803603602081101561090f57600080fd5b810190808035906020019064010000000081111561092c57600080fd5b82018360208201111561093e57600080fd5b8035906020019184600183028401116401000000008311171561096057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061177b565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b5050505050905090565b6000610adc8261182c565b610b31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612cf1602b913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b7782610f3d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4b495031373a20617070726f76616c20746f2063757272656e74206f776e657281525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c5b5750610c5a8133611661565b5b610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180612d1c6037913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610d79338261189e565b610dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612c156030913960400191505060405180910390fd5b610dd9838383611992565b505050565b6000610de983611005565b8210610e40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612b98602a913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610e8a57fe5b9060005260206000200154905092915050565b610eb8838383604051806020016040528060008152506114dc565b505050565b6000610ec7610d62565b8210610f1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612cc6602b913960400191505060405180910390fd5b60078281548110610f2b57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612bc26028913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561108c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c756029913960400191505060405180910390fd5b6110d3600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206119b6565b9050919050565b6110e261123f565b611154576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561132f5780601f106113045761010080835404028352916020019161132f565b820191906000526020600020905b81548152906001019060200180831161131257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4b495031373a20617070726f766520746f2063616c6c6572000000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6114e7848484610d6f565b6114f3848484846119c4565b611548576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612c456030913960400191505060405180910390fd5b50505050565b60606115598261182c565b6115ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612b21602e913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116555780601f1061162a57610100808354040283529160200191611655565b820191906000526020600020905b81548152906001019060200180831161163857829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116fd61123f565b61176f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61177881611f26565b50565b600061178561123f565b6117f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611801600d61206c565b600061180d600d6119b6565b90506118193382612082565b61182381846120a3565b80915050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006118a98261182c565b6118fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612d53602b913960400191505060405180910390fd5b600061190983610f3d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061197857508373ffffffffffffffffffffffffffffffffffffffff1661196084610ad1565b73ffffffffffffffffffffffffffffffffffffffff16145b8061198957506119888185611661565b5b91505092915050565b61199d83838361212d565b6119a78382612388565b6119b18282612526565b505050565b600081600001549050919050565b60008060606119e88673ffffffffffffffffffffffffffffffffffffffff166125ed565b6119f757600192505050611f1e565b8573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ac7578082015181840152602081019050611aac565b50505050905090810190601f168015611af45780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611b8c5780518252602082019150602081019050602083039250611b69565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611bee576040519150601f19603f3d011682016040523d82523d6000602084013e611bf3565b606091505b5080925081935050506000815114158015611c77575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190516020811015611c4557600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15611c8757600192505050611f1e565b8573ffffffffffffffffffffffffffffffffffffffff16636745782b60e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d57578082015181840152602081019050611d3c565b50505050905090810190601f168015611d845780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611e1c5780518252602082019150602081019050602083039250611df9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e7e576040519150601f19603f3d011682016040523d82523d6000602084013e611e83565b606091505b5080925081935050506000815114158015611f075750636745782b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190516020811015611ed557600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15611f1757600192505050611f1e565b6000925050505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612b4f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001816000016000828254019250508190555050565b61208c8282612600565b6120968282612526565b61209f81612818565b5050565b6120ac8261182c565b612101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612bea602b913960400191505060405180910390fd5b80600b60008481526020019081526020016000209080519060200190612128929190612a4f565b505050565b8273ffffffffffffffffffffffffffffffffffffffff1661214d82610f3d565b73ffffffffffffffffffffffffffffffffffffffff16146121b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612c9e6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561223f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612b756023913960400191505060405180910390fd5b61224881612864565b61228f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612922565b6122d6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061206c565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006123e06001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061294590919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146124cd576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061244d57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106124a557fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361251f9190612acf565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4b495031373a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6126ac8161182c565b1561271f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4b495031373a20746f6b656e20616c7265616479206d696e746564000000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127b8600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061206c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461291f5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61293a6001826000015461294590919063ffffffff16565b816000018190555050565b600061298783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061298f565b905092915050565b6000838311158290612a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a015780820151818401526020810190506129e6565b50505050905090810190601f168015612a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a9057805160ff1916838001178555612abe565b82800160010185558215612abe579182015b82811115612abd578251825591602001919060010190612aa2565b5b509050612acb9190612afb565b5090565b815481835581811115612af657818360005260206000209182019101612af59190612afb565b5b505050565b612b1d91905b80821115612b19576000816000905550600101612b01565b5090565b9056fe4b495031374d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b49503137456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031374d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b49503137456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea265627a7a723158204f927ffb2d58d2fd26d360ddb577b8f6b1ecd48acb2e5b5b6b004aa3a50faf6164736f6c63430005100032",
  "sourceMap": "84:481:1:-;;;210:48;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:48:1;41040:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41131:4;41137:6;13716:39;13385:10;13735:19;;13716:18;;;:39;;:::i;:::-;16879;16756:10;16898:19;;16879:18;;;:39;;:::i;:::-;30035:50;29853:10;30054:30;;30035:18;;;:50;;:::i;:::-;38699:4;38691:5;:12;;;;;;;;;;;;:::i;:::-;;38723:6;38713:7;:16;;;;;;;;;;;;:::i;:::-;;38815:48;38554:10;38834:28;;38815:18;;;:48;;:::i;:::-;38620:250;;41040:173;;49914:10;49905:6;;:19;;;;;;;;;;;;;;;;;;49972:6;;;;;;;;;;;49939:40;;49968:1;49939:40;;;;;;;;;;;;84:481:1;;14463:189:0;14553:10;14538:25;;:11;:25;;;;;14530:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14641:4;14605:20;:33;14626:11;14605:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;14463:189;:::o;84:481:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "84:481:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;84:481:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13911:161:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13911:161:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;38975:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;38975:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18972:233;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18972:233:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18265:422;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18265:422:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30909:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20672:348;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20672:348:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30466:290;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30466:290:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21651:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21651:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;31341:229;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;31341:229:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17588:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17588:256:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17129:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17129:240:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50855:137;;;:::i;:::-;;50062:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;50421:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;39167:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;39167:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19498:242;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19498:242:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22516:334;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;22516:334:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;22516:334:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;22516:334:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;22516:334:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;22516:334:0;;;;;;;;;;;;;;;:::i;:::-;;39454:235;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;39454:235:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;39454:235:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20062:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20062:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;51141:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;51141:115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;264:299:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;264:299:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;264:299:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;264:299:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;264:299:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;264:299:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13911:161:0;14005:4;14032:20;:33;14053:11;14032:33;;;;;;;;;;;;;;;;;;;;;;;;;;;14025:40;;13911:161;;;:::o;38975:83::-;39014:13;39046:5;39039:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38975:83;:::o;18972:233::-;19031:7;19071:16;19079:7;19071;:16::i;:::-;19050:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19174:15;:24;19190:7;19174:24;;;;;;;;;;;;;;;;;;;;;19167:31;;18972:233;;;:::o;18265:422::-;18328:13;18344:16;18352:7;18344;:16::i;:::-;18328:32;;18384:5;18378:11;;:2;:11;;;;18370:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18472:5;18458:19;;:10;:19;;;:58;;;;18481:35;18498:5;18505:10;18481:16;:35::i;:::-;18458:58;18437:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18635:2;18608:15;:24;18624:7;18608:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;18672:7;18668:2;18652:28;;18661:5;18652:28;;;;;;;;;;;;18265:422;;;:::o;30909:94::-;30953:7;30979:10;:17;;;;30972:24;;30909:94;:::o;20672:348::-;20857:39;20876:10;20888:7;20857:18;:39::i;:::-;20836:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20981:32;20995:4;21001:2;21005:7;20981:13;:32::i;:::-;20672:348;;;:::o;30466:290::-;30570:7;30622:16;30632:5;30622:9;:16::i;:::-;30614:5;:24;30593:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30723:12;:19;30736:5;30723:19;;;;;;;;;;;;;;;30743:5;30723:26;;;;;;;;;;;;;;;;30716:33;;30466:290;;;;:::o;21651:162::-;21767:39;21784:4;21790:2;21794:7;21767:39;;;;;;;;;;;;:16;:39::i;:::-;21651:162;;;:::o;31341:229::-;31399:7;31447:13;:11;:13::i;:::-;31439:5;:21;31418:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31546:10;31557:5;31546:17;;;;;;;;;;;;;;;;31539:24;;31341:229;;;:::o;17588:256::-;17643:7;17662:13;17678:11;:20;17690:7;17678:20;;;;;;;;;;;;;;;;;;;;;17662:36;;17746:1;17729:19;;:5;:19;;;;17708:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17832:5;17825:12;;;17588:256;;;:::o;17129:240::-;17184:7;17241:1;17224:19;;:5;:19;;;;17203:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17328:34;:17;:24;17346:5;17328:24;;;;;;;;;;;;;;;:32;:34::i;:::-;17321:41;;17129:240;;;:::o;50855:137::-;50274:9;:7;:9::i;:::-;50266:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50953:1;50916:40;;50937:6;;;;;;;;;;;50916:40;;;;;;;;;;;;50983:1;50966:6;;:19;;;;;;;;;;;;;;;;;;50855:137::o;50062:85::-;50100:15;50134:6;;;;;;;;;;;50127:13;;50062:85;:::o;50421:90::-;50461:4;50498:6;;;;;;;;;;;50484:20;;:10;:20;;;50477:27;;50421:90;:::o;39167:87::-;39208:13;39240:7;39233:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39167:87;:::o;19498:242::-;19583:10;19577:16;;:2;:16;;;;19569:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19670:8;19633:18;:30;19652:10;19633:30;;;;;;;;;;;;;;;:34;19664:2;19633:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;19720:2;19693:40;;19708:10;19693:40;;;19724:8;19693:40;;;;;;;;;;;;;;;;;;;;;;19498:242;;:::o;22516:334::-;22660:31;22673:4;22679:2;22683:7;22660:12;:31::i;:::-;22722:47;22744:4;22750:2;22754:7;22763:5;22722:21;:47::i;:::-;22701:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22516:334;;;;:::o;39454:235::-;39512:13;39558:16;39566:7;39558;:16::i;:::-;39537:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39663:10;:19;39674:7;39663:19;;;;;;;;;;;39656:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39454:235;;;:::o;20062:173::-;20166:4;20193:18;:25;20212:5;20193:25;;;;;;;;;;;;;;;:35;20219:8;20193:35;;;;;;;;;;;;;;;;;;;;;;;;;20186:42;;20062:173;;;;:::o;51141:115::-;50274:9;:7;:9::i;:::-;50266:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51221:28;51240:8;51221:18;:28::i;:::-;51141:115;:::o;264:299:1:-;355:7;50274:9:0;:7;:9::i;:::-;50266:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:21:1;:9;:19;:21::i;:::-;409:17;429:19;:9;:17;:19::i;:::-;409:39;;458:28;464:10;476:9;458:5;:28::i;:::-;496:33;509:9;520:8;496:12;:33::i;:::-;547:9;540:16;;;264:299;;;:::o;23045:152:0:-;23102:4;23118:13;23134:11;:20;23146:7;23134:20;;;;;;;;;;;;;;;;;;;;;23118:36;;23188:1;23171:19;;:5;:19;;;;23164:26;;;23045:152;;;:::o;23558:414::-;23667:4;23708:16;23716:7;23708;:16::i;:::-;23687:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23803:13;23819:16;23827:7;23819;:16::i;:::-;23803:32;;23864:5;23853:16;;:7;:16;;;:63;;;;23909:7;23885:31;;:20;23897:7;23885:11;:20::i;:::-;:31;;;23853:63;:111;;;;23932:32;23949:5;23956:7;23932:16;:32::i;:::-;23853:111;23845:120;;;23558:414;;;;:::o;31945:269::-;32060:38;32080:4;32086:2;32090:7;32060:19;:38::i;:::-;32109:47;32142:4;32148:7;32109:32;:47::i;:::-;32167:40;32195:2;32199:7;32167:27;:40::i;:::-;31945:269;;;:::o;12729:112::-;12794:7;12820;:14;;;12813:21;;12729:112;;;:::o;26901:1149::-;27051:4;27067:12;27089:23;27128:15;:2;:13;;;:15::i;:::-;27123:58;;27166:4;27159:11;;;;;;27123:58;27263:2;:7;;15381:10;27324:16;;27358:10;27386:4;27408:7;27433:5;27284:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;27284:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;27284:168:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;27284:168:0;27263:199;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;27263:199:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;27239:223:0;;;;;;;;27510:1;27489:10;:17;:22;;:90;;;;;15381:10;27563:16;;27527:52;;;27538:10;27527:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27527:32:0;;;;;;;;;;;;;;;;:52;;;;27489:90;27472:154;;;27611:4;27604:11;;;;;;27472:154;27660:2;:7;;15149:10;27721:15;;27754:10;27782:4;27804:7;27829:5;27681:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;27681:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;27681:167:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;27681:167:0;27660:198;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;27660:198:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;27636:222:0;;;;;;;;27906:1;27885:10;:17;:22;;:89;;;;;15149:10;27959:15;;27923:51;;;27934:10;27923:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27923:32:0;;;;;;;;;;;;;;;;:51;;;;27885:89;27868:153;;;28006:4;27999:11;;;;;;27868:153;28038:5;28031:12;;;;26901:1149;;;;;;;:::o;51357:267::-;51471:1;51451:22;;:8;:22;;;;51430:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51581:8;51552:38;;51573:6;;;;;;;;;;;51552:38;;;;;;;;;;;;51609:8;51600:6;;:17;;;;;;;;;;;;;;;;;;51357:267;:::o;12847:89::-;12928:1;12910:7;:14;;;:19;;;;;;;;;;;12847:89;:::o;32471:196::-;32534:24;32546:2;32550:7;32534:11;:24::i;:::-;32569:40;32597:2;32601:7;32569:27;:40::i;:::-;32620;32652:7;32620:31;:40::i;:::-;32471:196;;:::o;39928:225::-;40026:16;40034:7;40026;:16::i;:::-;40005:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40143:3;40121:10;:19;40132:7;40121:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;39928:225;;:::o;25820:509::-;25976:4;25956:24;;:16;25964:7;25956;:16::i;:::-;:24;;;25935:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26078:1;26064:16;;:2;:16;;;;26056:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26131:23;26146:7;26131:14;:23::i;:::-;26165:35;:17;:23;26183:4;26165:23;;;;;;;;;;;;;;;:33;:35::i;:::-;26210:33;:17;:21;26228:2;26210:21;;;;;;;;;;;;;;;:31;:33::i;:::-;26277:2;26254:11;:20;26266:7;26254:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;26314:7;26310:2;26295:27;;26304:4;26295:27;;;;;;;;;;;;25820:509;;;:::o;35111:1140::-;35385:22;35410:32;35440:1;35410:12;:18;35423:4;35410:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;35385:57;;35452:18;35473:17;:26;35491:7;35473:26;;;;;;;;;;;;35452:47;;35617:14;35603:10;:28;35599:323;;35647:19;35669:12;:18;35682:4;35669:18;;;;;;;;;;;;;;;35688:14;35669:34;;;;;;;;;;;;;;;;35647:56;;35751:11;35718:12;:18;35731:4;35718:18;;;;;;;;;;;;;;;35737:10;35718:30;;;;;;;;;;;;;;;:44;;;;35867:10;35834:17;:30;35852:11;35834:30;;;;;;;;;;;:43;;;;35599:323;;36008:12;:18;36021:4;36008:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;35111:1140;;;;:::o;33957:183::-;34070:12;:16;34083:2;34070:16;;;;;;;;;;;;;;;:23;;;;34041:17;:26;34059:7;34041:26;;;;;;;;;;;:52;;;;34103:12;:16;34116:2;34103:16;;;;;;;;;;;;;;;34125:7;34103:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;34103:30:0;;;;;;;;;;;;;;;;;;;;;;33957:183;;:::o;11286:433::-;11346:4;11549:12;11670:7;11658:20;11650:28;;11711:1;11704:4;:8;11697:15;;;11286:433;;;:::o;24217:325::-;24302:1;24288:16;;:2;:16;;;;24280:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24359:16;24367:7;24359;:16::i;:::-;24358:17;24350:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24441:2;24418:11;:20;24430:7;24418:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;24453:33;:17;:21;24471:2;24453:21;;;;;;;;;;;;;;;:31;:33::i;:::-;24527:7;24523:2;24502:33;;24519:1;24502:33;;;;;;;;;;;;24217:325;;:::o;34335:161::-;34438:10;:17;;;;34411:15;:24;34427:7;34411:24;;;;;;;;;;;:44;;;;34465:10;34481:7;34465:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;34465:24:0;;;;;;;;;;;;;;;;;;;;;;34335:161;:::o;28212:171::-;28311:1;28275:38;;:15;:24;28291:7;28275:24;;;;;;;;;;;;;;;;;;;;;:38;;;28271:106;;28364:1;28329:15;:24;28345:7;28329:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;28271:106;28212:171;:::o;12942:108::-;13022:21;13041:1;13022:7;:14;;;:18;;:21;;;;:::i;:::-;13005:7;:14;;:38;;;;12942:108;:::o;6654:134::-;6712:7;6738:43;6742:1;6745;6738:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;6731:50;;6654:134;;;;:::o;7112:217::-;7228:7;7260:1;7255;:6;;7263:12;7247:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7247:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7286:9;7302:1;7298;:5;7286:17;;7321:1;7314:8;;;7112:217;;;;;:::o;84:481:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.6;\n\nimport \"./KIP17Full.sol\";\n\ncontract MyNFTs is KIP17Full, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    constructor() public KIP17Full(\"SKUNK\", \"SK\") {}\n\n    function mintNFT(string memory tokenURI)\n        public\n        onlyOwner\n        returns (uint256)\n    {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n        _mint(msg.sender, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        return newItemId;\n    }\n}\n//0x3c04e3ed63f0f90fa2a5200d307c34f9257a9b60\n",
  "sourcePath": "/Users/anhyeongjun/Desktop/solidity/sk_sunny/contracts/MyNFTs.sol",
  "ast": {
    "absolutePath": "project:/contracts/MyNFTs.sol",
    "exportedSymbols": {
      "MyNFTs": [
        2240
      ]
    },
    "id": 2241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2187,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "project:/contracts/KIP17Full.sol",
        "file": "./KIP17Full.sol",
        "id": 2188,
        "nodeType": "ImportDirective",
        "scope": 2241,
        "sourceUnit": 2186,
        "src": "57:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2189,
              "name": "KIP17Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1571,
              "src": "103:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Full_$1571",
                "typeString": "contract KIP17Full"
              }
            },
            "id": 2190,
            "nodeType": "InheritanceSpecifier",
            "src": "103:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2191,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2185,
              "src": "114:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2185",
                "typeString": "contract Ownable"
              }
            },
            "id": 2192,
            "nodeType": "InheritanceSpecifier",
            "src": "114:7:1"
          }
        ],
        "contractDependencies": [
          9,
          109,
          434,
          1052,
          1076,
          1408,
          1428,
          1552,
          1571,
          2185
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2240,
        "linearizedBaseContracts": [
          2240,
          2185,
          1571,
          1552,
          1428,
          1408,
          1076,
          1052,
          109,
          434,
          9
        ],
        "name": "MyNFTs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2195,
            "libraryName": {
              "contractScope": null,
              "id": 2193,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 385,
              "src": "134:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$385",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "128:36:1",
            "typeName": {
              "contractScope": null,
              "id": 2194,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 345,
              "src": "147:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$345_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2197,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 2240,
            "src": "169:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$345_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2196,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 345,
              "src": "169:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$345_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "256:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 2205,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "534b554e4b",
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "241:7:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a33cd4e15740650fa9c7d53a7276b1b53db2d2a487fc639f76ea9535fd2e27ac",
                      "typeString": "literal_string \"SKUNK\""
                    },
                    "value": "SKUNK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534b",
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "250:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0d6b8c9ff879e34019477df3f5200b6f88256d1515a76b3e0e1eb01fd46223c1",
                      "typeString": "literal_string \"SK\""
                    },
                    "value": "SK"
                  }
                ],
                "id": 2202,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2199,
                  "name": "KIP17Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1571,
                  "src": "231:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KIP17Full_$1571_$",
                    "typeString": "type(contract KIP17Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "231:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:2:1"
            },
            "returnParameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:1"
            },
            "scope": 2240,
            "src": "210:48:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2238,
              "nodeType": "Block",
              "src": "368:195:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2214,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "378:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$345_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 368,
                      "src": "378:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$345_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$345_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "378:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2218,
                  "nodeType": "ExpressionStatement",
                  "src": "378:21:1"
                },
                {
                  "assignments": [
                    2220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2220,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2238,
                      "src": "409:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "409:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2224,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2221,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "429:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$345_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 356,
                      "src": "429:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$345_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$345_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "409:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2255,
                          "src": "464:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "464:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2228,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "476:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2225,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1215
                      ],
                      "referencedDeclaration": 1215,
                      "src": "458:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "458:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2232,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "509:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2233,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "520:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2231,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1521,
                      "src": "496:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "496:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2236,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2220,
                    "src": "547:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2213,
                  "id": 2237,
                  "nodeType": "Return",
                  "src": "540:16:1"
                }
              ]
            },
            "documentation": null,
            "id": 2239,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2210,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2209,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2118,
                  "src": "328:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:9:1"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "281:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:24:1"
            },
            "returnParameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2212,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "355:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:9:1"
            },
            "scope": 2240,
            "src": "264:299:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2241,
        "src": "84:481:1"
      }
    ],
    "src": "32:579:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/MyNFTs.sol",
      "exportedSymbols": {
        "MyNFTs": [
          2240
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".6"
          ]
        },
        "id": 2187,
        "name": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 2186,
          "absolutePath": "project:/contracts/KIP17Full.sol",
          "file": "./KIP17Full.sol",
          "scope": 2241,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2188,
        "name": "ImportDirective",
        "src": "57:25:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            9,
            109,
            434,
            1052,
            1076,
            1408,
            1428,
            1552,
            1571,
            2185
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2240,
            2185,
            1571,
            1552,
            1428,
            1408,
            1076,
            1052,
            109,
            434,
            9
          ],
          "name": "MyNFTs",
          "scope": 2241
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "KIP17Full",
                  "referencedDeclaration": 1571,
                  "type": "contract KIP17Full"
                },
                "id": 2189,
                "name": "UserDefinedTypeName",
                "src": "103:9:1"
              }
            ],
            "id": 2190,
            "name": "InheritanceSpecifier",
            "src": "103:9:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 2185,
                  "type": "contract Ownable"
                },
                "id": 2191,
                "name": "UserDefinedTypeName",
                "src": "114:7:1"
              }
            ],
            "id": 2192,
            "name": "InheritanceSpecifier",
            "src": "114:7:1"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters",
                  "referencedDeclaration": 385,
                  "type": "library Counters"
                },
                "id": 2193,
                "name": "UserDefinedTypeName",
                "src": "134:8:1"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters.Counter",
                  "referencedDeclaration": 345,
                  "type": "struct Counters.Counter"
                },
                "id": 2194,
                "name": "UserDefinedTypeName",
                "src": "147:16:1"
              }
            ],
            "id": 2195,
            "name": "UsingForDirective",
            "src": "128:36:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_tokenIds",
              "scope": 2240,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct Counters.Counter",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Counters.Counter",
                  "referencedDeclaration": 345,
                  "type": "struct Counters.Counter"
                },
                "id": 2196,
                "name": "UserDefinedTypeName",
                "src": "169:16:1"
              }
            ],
            "id": 2197,
            "name": "VariableDeclaration",
            "src": "169:34:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2240,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2198,
                "name": "ParameterList",
                "src": "221:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2203,
                "name": "ParameterList",
                "src": "256:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1571,
                      "type": "type(contract KIP17Full)",
                      "value": "KIP17Full"
                    },
                    "id": 2199,
                    "name": "Identifier",
                    "src": "231:9:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "534b554e4b",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"SKUNK\"",
                      "value": "SKUNK"
                    },
                    "id": 2200,
                    "name": "Literal",
                    "src": "241:7:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "534b",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"SK\"",
                      "value": "SK"
                    },
                    "id": 2201,
                    "name": "Literal",
                    "src": "250:4:1"
                  }
                ],
                "id": 2202,
                "name": "ModifierInvocation",
                "src": "231:24:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2204,
                "name": "Block",
                "src": "256:2:1"
              }
            ],
            "id": 2205,
            "name": "FunctionDefinition",
            "src": "210:48:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintNFT",
              "scope": 2240,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURI",
                      "scope": 2239,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2206,
                        "name": "ElementaryTypeName",
                        "src": "281:6:1"
                      }
                    ],
                    "id": 2207,
                    "name": "VariableDeclaration",
                    "src": "281:22:1"
                  }
                ],
                "id": 2208,
                "name": "ParameterList",
                "src": "280:24:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2239,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2211,
                        "name": "ElementaryTypeName",
                        "src": "355:7:1"
                      }
                    ],
                    "id": 2212,
                    "name": "VariableDeclaration",
                    "src": "355:7:1"
                  }
                ],
                "id": 2213,
                "name": "ParameterList",
                "src": "354:9:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2118,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2209,
                    "name": "Identifier",
                    "src": "328:9:1"
                  }
                ],
                "id": 2210,
                "name": "ModifierInvocation",
                "src": "328:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 368,
                              "type": "function (struct Counters.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2197,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "_tokenIds"
                                },
                                "id": 2214,
                                "name": "Identifier",
                                "src": "378:9:1"
                              }
                            ],
                            "id": 2216,
                            "name": "MemberAccess",
                            "src": "378:19:1"
                          }
                        ],
                        "id": 2217,
                        "name": "FunctionCall",
                        "src": "378:21:1"
                      }
                    ],
                    "id": 2218,
                    "name": "ExpressionStatement",
                    "src": "378:21:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2220
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newItemId",
                          "scope": 2238,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2219,
                            "name": "ElementaryTypeName",
                            "src": "409:7:1"
                          }
                        ],
                        "id": 2220,
                        "name": "VariableDeclaration",
                        "src": "409:17:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "current",
                              "referencedDeclaration": 356,
                              "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2197,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "_tokenIds"
                                },
                                "id": 2221,
                                "name": "Identifier",
                                "src": "429:9:1"
                              }
                            ],
                            "id": 2222,
                            "name": "MemberAccess",
                            "src": "429:17:1"
                          }
                        ],
                        "id": 2223,
                        "name": "FunctionCall",
                        "src": "429:19:1"
                      }
                    ],
                    "id": 2224,
                    "name": "VariableDeclarationStatement",
                    "src": "409:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1215
                              ],
                              "referencedDeclaration": 1215,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 2225,
                            "name": "Identifier",
                            "src": "458:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2255,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2226,
                                "name": "Identifier",
                                "src": "464:3:1"
                              }
                            ],
                            "id": 2227,
                            "name": "MemberAccess",
                            "src": "464:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2220,
                              "type": "uint256",
                              "value": "newItemId"
                            },
                            "id": 2228,
                            "name": "Identifier",
                            "src": "476:9:1"
                          }
                        ],
                        "id": 2229,
                        "name": "FunctionCall",
                        "src": "458:28:1"
                      }
                    ],
                    "id": 2230,
                    "name": "ExpressionStatement",
                    "src": "458:28:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1521,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 2231,
                            "name": "Identifier",
                            "src": "496:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2220,
                              "type": "uint256",
                              "value": "newItemId"
                            },
                            "id": 2232,
                            "name": "Identifier",
                            "src": "509:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2207,
                              "type": "string memory",
                              "value": "tokenURI"
                            },
                            "id": 2233,
                            "name": "Identifier",
                            "src": "520:8:1"
                          }
                        ],
                        "id": 2234,
                        "name": "FunctionCall",
                        "src": "496:33:1"
                      }
                    ],
                    "id": 2235,
                    "name": "ExpressionStatement",
                    "src": "496:33:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2213
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 2220,
                          "type": "uint256",
                          "value": "newItemId"
                        },
                        "id": 2236,
                        "name": "Identifier",
                        "src": "547:9:1"
                      }
                    ],
                    "id": 2237,
                    "name": "Return",
                    "src": "540:16:1"
                  }
                ],
                "id": 2238,
                "name": "Block",
                "src": "368:195:1"
              }
            ],
            "id": 2239,
            "name": "FunctionDefinition",
            "src": "264:299:1"
          }
        ],
        "id": 2240,
        "name": "ContractDefinition",
        "src": "84:481:1"
      }
    ],
    "id": 2241,
    "name": "SourceUnit",
    "src": "32:579:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1001": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD823E82ba0f9Ef7eF6e710978A91972f0fad6A51",
      "transactionHash": "0x4fe604a466932ae068aa81ba64be12d725c59d45791d58e7b1699e47d91056e4"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8731CaD6A627ebAdc4b9D9DCE61876aa79c88D03",
      "transactionHash": "0x1475d569401595af98e9cd8e0a69a019a51606fbbc69895a0389d6a5ff4c9d90"
    },
    "8217": {
      "events": {},
      "links": {},
      "address": "0x3c04e3eD63F0f90fA2a5200D307C34F9257a9B60",
      "transactionHash": "0x0a93f461ec66dd36d0ec2abe2a075e6f8be21ece69c5923c6954da16c7ac3f14"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-10-19T09:43:21.382Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}